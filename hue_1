from phue import Bridge
from datetime import datetime, timedelta
import time
import datetime
import ephem
import pytz
import logging

BRIDGE_IP = "192.168.178.34"

b = Bridge(BRIDGE_IP)
b.connect()
b.get_api()

sen = b.get_sensor_objects("name")
light_names = b.get_light_objects("name")
lights = b.lights


Dummy = [{"lamp": "Elena/Deckelampe", "t_x":        120}]

Olli = [
    {"lamp": "Olli/Sony TV/Links/Hue Play", "t_x":  120},
    {"lamp": "Olli/Sony TV/Rechts/Hue Play", "t_x": 120},
    {"lamp": "Olli/Regal/Hue Go", "t_x":            120},
    {"lamp": "Olli/Schreibtisch/Hue Go", "t_x": 120},
    {"lamp": "Olli/Decke 1/Hue color", "t_x": 120}
]

outside = [
    {"lamp": "Draußen/Terrasse/Tür/Ost", "t_x": 120},
    {"lamp": "Draußen/Terrasse/L/Ost", "t_x": 120},
    {"lamp": "Draußen/Terrasse/R/Ost", "t_x": 120},
    {"lamp": "Draußen/Küche/L/Nord", "t_x": 120},
    {"lamp": "Draußen/Küche/R/Nord", "t_x": 120},
    {"lamp": "Draußen/Haustür/West", "t_x": 120},
    {"lamp": "Draußen/Carport/Vorne 1/", "t_x": 120},
    {"lamp": "Draußen/Carport/Vorne 2/", "t_x": 120},
    {"lamp": "Draußen/Auffahrt/Außen/1", "t_x": 120},
    {"lamp": "Draußen/Auffahrt/Außen/2", "t_x": 120},
    {"lamp": "Draußen/Auffahrt/Innen/1", "t_x": 120},
    {"lamp": "Draußen/Auffahrt/Innen/2", "t_x": 120},
    {"lamp": "Draußen/Auffahrt/Innen/3", "t_x": 120},
    {"lamp": "Draußen/Auffahrt/Innen/4", "t_x": 120}
]

zone_daymode = [
    {"lamp": "Draußen/Terrasse/Tür/Ost", "t_x": 120},
    {"lamp": "Draußen/Terrasse/L/Ost", "t_x": 120},
    {"lamp": "Draußen/Terrasse/R/Ost", "t_x": 120},
    {"lamp": "Draußen/Küche/L/Nord", "t_x": 120},
    {"lamp": "Draußen/Küche/R/Nord", "t_x": 120},
    {"lamp": "Draußen/Haustür/West", "t_x": 120},
    {"lamp": "Draußen/Carport/Vorne 1/", "t_x": 120},
    {"lamp": "Draußen/Carport/Vorne 2/", "t_x": 120},
    {"lamp": "Bibliothek/Hue white spot/R", "t_x": 120},
    {"lamp": "Bibliothek/Hue white spot/L", "t_x": 120},
    {"lamp": "Zwischenraum/Schrank/lightstrip", "t_x": 120},
    {"lamp": "Flur/Haustür/Tisch/Hue white", "t_x": 120},
    {"lamp": "Draußen/Auffahrt/Außen/1", "t_x": 120},
    {"lamp": "Draußen/Auffahrt/Außen/2", "t_x": 120},
    {"lamp": "Draußen/Auffahrt/Innen/1", "t_x": 120},
    {"lamp": "Draußen/Auffahrt/Innen/2", "t_x": 120},
    {"lamp": "Draußen/Auffahrt/Innen/3", "t_x": 120},
    {"lamp": "Draußen/Auffahrt/Innen/4", "t_x": 120}
]

zone_outside = [
    {"lamp": "Draußen/Terrasse/Tür/Ost", "t_x": 120},
    {"lamp": "Draußen/Terrasse/L/Ost", "t_x": 120},
    {"lamp": "Draußen/Terrasse/R/Ost", "t_x": 120},
    {"lamp": "Draußen/Küche/L/Nord", "t_x": 120},
    {"lamp": "Draußen/Küche/R/Nord", "t_x": 120},
    {"lamp": "Draußen/Haustür/West", "t_x": 120},
    {"lamp": "Draußen/Carport/Vorne 1/", "t_x": 120},
    {"lamp": "Draußen/Carport/Vorne 2/", "t_x": 120}
]

zone_runway = [
    {"lamp": "Draußen/Auffahrt/Innen/1", "t_x": 120},
    {"lamp": "Draußen/Auffahrt/Innen/2", "t_x": 120},
    {"lamp": "Draußen/Auffahrt/Außen/1", "t_x": 120},
    {"lamp": "Draußen/Auffahrt/Innen/3", "t_x": 120},
    {"lamp": "Draußen/Auffahrt/Außen/2", "t_x": 120},
    {"lamp": "Draußen/Auffahrt/Innen/4", "t_x": 120},
    {"lamp": "Draußen/Carport/Vorne 1/", "t_x": 120},
    {"lamp": "Draußen/Carport/Vorne 2/", "t_x": 120}
]

zone_cominghome = [
    {"lamp": "Draußen/Terrasse/Tür/Ost", "t_x": 120},
    {"lamp": "Draußen/Terrasse/L/Ost", "t_x": 120},
    {"lamp": "Draußen/Terrasse/R/Ost", "t_x": 120},
    {"lamp": "Draußen/Küche/L/Nord", "t_x": 120},
    {"lamp": "Draußen/Küche/R/Nord", "t_x": 120},
    {"lamp": "Draußen/Haustür/West", "t_x": 120},
    {"lamp": "Draußen/Carport/Vorne 1/", "t_x": 120},
    {"lamp": "Draußen/Carport/Vorne 2/", "t_x": 120},
    {"lamp": "Olli/Sony TV/Links/Hue Play", "t_x": 120},
    {"lamp": "Olli/Sony TV/Rechts/Hue Play", "t_x": 120}
]

zone_waylight = [
    {"lamp": "Bibliothek/Hue white spot/R", "t_x": 120},
    {"lamp": "Bibliothek/Hue white spot/L", "t_x": 120},
    {"lamp": "Zwischenraum/Schrank/lightstrip", "t_x": 120},
    {"lamp": "Flur/Haustür/Tisch/Hue white", "t_x": 120}
]




Pfad = '/home/oliver/Dokumente/autostart/outside.log'
#'/home/oliver/Desktop/autostart/outside.log'
#/home/olli/Schreibtisch/SAP/hue/daly/outside/outside.log
logging.basicConfig(filename=Pfad, level=logging.INFO, format='%(asctime)s %(message)s')


def sunrise():
    # Geografische Koordinaten für den gewünschten Standort
    latitude = 53.595283
    longitude = 7.340012

    # Datum und Zeitzone für die Berechnung des Sonnenaufgangs
    date = datetime.date.today()
    timezone = pytz.timezone('Europe/Berlin')

    # Berechnung der Uhrzeit für den Sonnenaufgang
    obs = ephem.Observer()
    obs.lat = str(latitude)
    obs.lon = str(longitude)
    obs.date = date.strftime('%Y/%m/%d')
    sun = ephem.Sun()
    sunrise = obs.next_rising(sun)

    # Konvertierung des Sonnenaufgangs in die lokale Zeitzone
    sunrise = pytz.utc.localize(sunrise.datetime()).astimezone(timezone)

    # Formatierung des Sonnenaufgangs
    formatted_sunrise_time = sunrise.strftime('%H:%M:%S')
    return formatted_sunrise_time



def sunset():
        # Geografische Koordinaten für den gewünschten Standort
        latitude = 53.595283
        longitude = 7.340012 

        # Datum und Zeitzone für die Berechnung des Sonnenuntergangs
        date = datetime.date.today()
        timezone = pytz.timezone('Europe/Berlin')

        # Berechnung der Uhrzeit für den Sonnenuntergang
        obs = ephem.Observer()
        obs.lat = str(latitude)
        obs.lon = str(longitude)
        obs.date = date.strftime('%Y/%m/%d')
        sun = ephem.Sun()
        sunset = obs.next_setting(sun)

        # Konvertierung der Sonnenuntergangszeit in die lokale Zeitzone
        sunset = pytz.utc.localize(sunset.datetime()).astimezone(timezone)

        # Formatierung der Sonnenuntergangszeit
        formatted_sunset_time = sunset.strftime('%H:%M:%S')
        return formatted_sunset_time





zone_nightmode = [
    {"lamp": "Bibliothek/Hue white spot/R", "t_x": 12},
    {"lamp": "Bibliothek/Hue white spot/L", "t_x": 12},
    {"lamp": "Zwischenraum/Schrank/lightstrip", "t_x": 12},
    {"lamp": "Flur/Haustür/Tisch/Hue white", "t_x": 12},
    {"lamp": "Flur/Olli/Decke/", "t_x": 12}
]

# Data structure to track lamp state and time last turned on
lamp_states = {item["lamp"]: {"on": False, "last_turned_on_time": None, "brightness": None} for item in zone_nightmode}


def check_lamp_state(lamp_array):
    current_datetime = datetime.datetime.now()
    
    true_lamps = []
    for item in lamp_array:
        lamp = item["lamp"]
        on_state = b.get_light(lamp, 'on')

        if on_state:
            true_lamps.append(lamp)
            lamp_states[lamp]["on"] = True

            # Check if the lamp was turned on for the first time or turned back on
            if lamp_states[lamp]["last_turned_on_time"] is None:
                lamp_states[lamp]["last_turned_on_time"] = current_datetime

    for lamp in true_lamps:
            last_turned_on_time = lamp_states[lamp]["last_turned_on_time"]
            t_x = [item["t_x"] for item in zone_nightmode if item["lamp"] == lamp][0]

            if (current_datetime - last_turned_on_time).total_seconds() > t_x:
                b.set_light(lamp, 'on', False)
                lamp_states[lamp]["on"] = False
                lamp_states[lamp]["last_turned_on_time"] = None
    return true_lamps





def main_function():
    while True:
        current_time = datetime.datetime.now()

        # Check the state of lamps and update true_lamps
        true_lamps = check_lamp_state(zone_nightmode)
        time.sleep(2)
        print("True Lamps:", true_lamps)

if __name__ == "__main__":
    main_function()





